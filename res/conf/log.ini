[loggers]
keys = root, converter

[handlers]
keys = console_handler, file_handler

[formatters]
keys = formatter


[logger_root]
level = DEBUG
handlers = file_handler, console_handler

[logger_converter]
level = DEBUG
handlers = file_handler, console_handler
# propagate = 0 does not pass messages to ancestor loggers (root)
propagate = 0
qualname = converter


[handler_console_handler]
class = StreamHandler
level = INFO
# level = DEBUG
formatter = formatter
args = (sys.stdout,)

[handler_file_handler]
class = FileHandler
level = DEBUG
formatter = formatter
# This causes a new file to be created for each script
# Change time.strftime("%Y%m%d%H%M%S") to time.strftime("%Y%m%d")
# And only one log per day will be created. All messages will be amended to it.
args = ("/var/log/media_converter_" + time.strftime("%%Y%%m%%d") + ".log", "a")


[formatter_formatter]
# name is the name of the logger root or Admin_Client
# levelname is the log message level debug, warn, ect
# lineno is the line number from where the call to log is made
# 04d is simple formatting to ensure there are four numeric places with leading zeros
# 4s would work as well, but would simply pad the string with leading spaces, right justify
# -4s would work as well, but would simply pad the string with trailing spaces, left justify
# filename is the file name from where the call to log is made
# funcName is the method name from where the call to log is made
# format=%(asctime)s | %(lineno)d | %(message)s
# format=%(asctime)s | %(name)s | %(levelname)s | %(message)s
# format=%(asctime)s | %(name)s | %(module)s-%(lineno) | %(levelname)s | %(message)s
# format=%(asctime)s | %(name)s | %(module)s-%(lineno)04d | %(levelname)s | %(message)s
# format=%(asctime)s | %(name)s | %(module)s-%(lineno)4s | %(levelname)-8s | %(message)s
format = [%(levelname)-7s] | %(asctime)s | [%(name)s] %(funcName)s (%(module)s:%(lineno)s) - %(message)s